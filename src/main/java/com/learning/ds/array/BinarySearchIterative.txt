arr = [2, 5, 8, 12, 16, 23, 38, 56, 72, 91]; searchKey = 23;

Iterative Binary Search
--------------------------------------------------------------------------------
	int binarySearch(arr, searchKey)
	binarySearch(arr, 23)
	-----------------------------------------------------------------------------
		int left = 0;
		int right = arr.length - 1 => right = 9;
		
		while(left <= right) => while(0 <=9 ): true
		---------------------------------------------------------------------------------------
			int mid = left + (right - left)/ 2 => mid = 0 + (9 - 0)/ 2 => mid = 0 + 4 => mid = 4
			
			if(arr[mid] == searchKey) => if(16 == 23) : false
			
			if(arr[mid] < searchKey) => if (16 < 23) : true
			--------------------------------------------------------
				left = mid + 1; => left = 5;
			
			else
			
		while(5 <= 9) : true
		---------------------------------------------------------------------------------------
			mid = 5 + (9 - 5)/2 => 5 + 2 = 7;
			
			if(arr[7] == 23) : false
			if(arr[7] < 23) : false
			else
				right = mid - 1; => right = 6
				
	  	while( 5 <= 6)
	 	---------------------------------------------------------------------------------------
	 		mid = 5 + (6 - 5) / 2
	 		mid = 5
	 		
	 		if(arr[5] == 23): true
	 			return 5;

Time Complexity : O(log N)
Auxiliary Space : O(1)	 			
****************************************************************************************
****************************************************************************************